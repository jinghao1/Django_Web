version: "3"

volumes:
  mysite.mysqldb.volume:
    name: mysite.mysqldb.volume
  mysite.postgresdb.volume:
    name: mysite.postgresdb.volume

services:
  django_mysqldb:
    image: mysql:5.7
    platform: linux/x86_64
    ports:
      - 33063:3306
    environment:
      MYSQL_ROOT_PASSWORD: mysitepass
      TZ: 'Asia/Shanghai'
    volumes:
      - ".:/app:rw"
      - "mysite.mysqldb.volume:/var/lib/mysql"
      - "./mysql:/docker-entrypoint-initdb.d/"
    networks:
      - DjangoWeb
  web:
    # the application's web service (container) will use an image based on our Dockerfile
    build: .
    # map the internal port 80 to port 8000 on the host
    ports:
      - "8100:80"
      - "8200:8200"
      - "8300:8300"
    # map the host directory to app (which allows us to see and edit files inside the container)
    volumes:
      - ".:/app:rw"
      - "./data:/data:rw"
    # the default command to run whenever the container is launched
    command: python manage.py runserver 0.0.0.0:80
    # the URL 'postgres' or 'mysql' will point to the application's db service
    networks:
      - DjangoWeb
    depends_on:
      - django_mysqldb
    env_file: .env-local



networks:
  DjangoWeb:
