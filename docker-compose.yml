version: "3"

#volumes:
#  mysite.mysqldb.volume:
#    name: mysite.mysqldb.volume
#  mysite.postgresdb.volume:
#    name: mysite.postgresdb.volume

services:

  django_web:
    # the application's web service (container) will use an image based on our Dockerfile
    image: python:3.6
#    build: .
    # map the internal port 80 to port 8000 on the host
    ports:
      - "80:80"
      - "8020:8200"
      - "8030:8300"
    # map the host directory to app (which allows us to see and edit files inside the container)
    volumes:
      - ".:/app"
      - "./data:/data"
    # the default command to run whenever the container is launched
    command: bash /app/start.sh
    # the URL 'postgres' or 'mysql' will point to the application's db service
    networks:
      - djangoweb2
#    depends_on:
#      - django_web_mysqldb2
    env_file: .env-local

#  django_web_mysqldb2:
#    image: mysql:5.7
#    platform: linux/x86_64
#    ports:
#      - '33065:3306'
#    environment:
#      MYSQL_ROOT_PASSWORD: mysitepass
#      TZ: 'Asia/Shanghai'
#    volumes:
#      - ".:/app:rw"
##      - "mysite.mysqldb.volume:/var/lib/mysql"
#      - "./mysql:/docker-entrypoint-initdb.d/"
#    networks:
#      - djangoweb2
#  dj_redis_v2:
#    image: redis:6.2
##    restart: always
#    volumes:
#      - ./redis/redis.conf:/etc/redis/redis.conf:ro
#      - ./redis/data:/data
#    command: redis-server /etc/redis/redis.conf
#    ports:
#      - 6378:6379
#    networks:
#      - djangoweb2

networks:
  djangoweb2:
